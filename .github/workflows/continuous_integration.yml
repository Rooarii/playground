name: Continuous integration (CI)

on:
  # This command allows us to run the Action automatically from the Actions tab.
  workflow_dispatch:

  push:
   branches:
     - main

  pull_request:
    types: [opened, synchronize, reopened]

# Uncomment the following lines if you want to run scheduled Continuous integration (CI) pipeline
#  schedule:
    # every hours
    #- cron: "0 */1 * * *"

# The sequence of runs in this workflow:
jobs:

  check-infrastructure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks repo under $GITHUB_WORKSHOP, so your job can access it
      - uses: actions/checkout@v3

      # Format recursively all terraform files
      - name: Initialize terraform
        working-directory: ./infrastructure
        run: terraform init

      # Format recursively all terraform files
      - name: Format all terraform files
        working-directory: ./infrastructure
        run: terraform fmt --check .

      # Validate terraform configuration before terraform plan & apply
      - name: Validate terraform configuration
        working-directory: ./infrastructure
        run: terraform validate

  # TODO: Enhancement Proposal: This job's steps can be parallelized using https://github.com/syphar/restore-virtualenv
  build-django-application:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: apis/python/django_app

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Create python virtual environment
      run: python -m venv .venv

    - name: Source python virtual environment
      run: source .venv/bin/activate

    - name: Install required dependencies
      run: pip install -r requirements.txt

    - name: Upgrade pip version
      run: pip install --upgrade pip

    - name: Migrate Database
      working-directory: apis/python/django_app
      run: python manage.py migrate

    - name: Check django_app
      working-directory: apis/python/django_app
      run: python manage.py check

    - name: Test django_app
      working-directory: apis/python/django_app
      run: python manage.py test --failfast -v 2

  #  TODO: Enhancement Proposal: This job's steps can be parallelized using https://github.com/syphar/restore-virtualenv
  build-front-django-webapp:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash
        working-directory: front

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: actions/checkout@v3

    - uses: actions/setup-python@v3
      with:
        python-version: '3.10' # Version range or exact version of a Python version to use, using SemVer's version range syntax
        architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified

    - name: Create python virtual environment
      run: python -m venv .venv

    - name: Source python virtual environment
      run: source .venv/bin/activate

    - name: Install required dependencies
      run: pip install -r requirements.txt

    - name: Upgrade pip version
      run: pip install --upgrade pip

    - name: Migrate Database
      working-directory: apis/python/django_app
      run: python manage.py migrate

    - name: Check django_app
      working-directory: apis/python/django_app
      run: python manage.py check

    - name: Test django_app
      working-directory: apis/python/django_app
      run: python manage.py test --failfast -v 2